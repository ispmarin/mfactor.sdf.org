<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Another Life Form - debian</title><link href="http://mfactor.sdf.org/blog/" rel="alternate"></link><link href="http://mfactor.sdf.org/blog/feeds/debian.atom.xml" rel="self"></link><id>http://mfactor.sdf.org/blog/</id><updated>2017-02-03T00:00:00-02:00</updated><entry><title>Self signed certificate with Git</title><link href="http://mfactor.sdf.org/blog/2017_02_03_self_sign_git.html" rel="alternate"></link><published>2017-02-03T00:00:00-02:00</published><updated>2017-02-03T00:00:00-02:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2017-02-03:/blog/2017_02_03_self_sign_git.html</id><summary type="html">&lt;p class="first last"&gt;How to work with a self signed certificate and&amp;nbsp;Git&lt;/p&gt;
</summary><content type="html">&lt;p&gt;After setting up Gogs with a self signed certificate, I needed to commit using &lt;span class="caps"&gt;HTTPS&lt;/span&gt; now. To do that, Git must be instructed to ignore the certificate signature&amp;nbsp;with&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;`
git config http.sslVerify false
`&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;that will disable the &lt;span class="caps"&gt;SSL&lt;/span&gt; verification for this session. An one-liner&amp;nbsp;is&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;`
git &lt;span class="pre"&gt;-c&lt;/span&gt; http.sslVerify=false clone &lt;span class="pre"&gt;https://domain.com/path/to/git&lt;/span&gt;
`&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;This &lt;a class="reference external" href="http://stackoverflow.com/questions/11621768/how-can-i-make-git-accept-a-self-signed-certificate"&gt;post&lt;/a&gt; has more information about&amp;nbsp;it.&lt;/p&gt;
</content><category term="os"></category></entry><entry><title>Using Kwallet to store credentials for git</title><link href="http://mfactor.sdf.org/blog/2017_02_02_kwallet_git.html" rel="alternate"></link><published>2017-02-02T00:00:00-02:00</published><updated>2017-02-02T00:00:00-02:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2017-02-02:/blog/2017_02_02_kwallet_git.html</id><summary type="html">&lt;p class="first last"&gt;How to avoid typing your password for git &lt;span class="caps"&gt;HTTPS&lt;/span&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I switched my repos to Gogs and now I&amp;#8217;m using &lt;span class="caps"&gt;HTTPS&lt;/span&gt; to push.
The thing is that I can&amp;#8217;t use my ssh keys for that, so I have to type the password.
There is a way to use the KWallet to store these credentials and tell Git to use KWallet for&amp;nbsp;them:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;`
sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; install ksshaskpass
`&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;and then configure git&amp;nbsp;as&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;`
git config &lt;span class="pre"&gt;--global&lt;/span&gt; core.askpass /usr/bin/ksshaskpass
`&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;and done. Quite&amp;nbsp;helpful.&lt;/p&gt;
</content><category term="os"></category></entry><entry><title>Different SSH keys for Different Hosts</title><link href="http://mfactor.sdf.org/blog/2017_01_10_ssh_keys_hosts.html" rel="alternate"></link><published>2017-01-10T10:20:00-02:00</published><updated>2017-01-10T10:20:00-02:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2017-01-10:/blog/2017_01_10_ssh_keys_hosts.html</id><summary type="html">&lt;p class="first last"&gt;Keep your keys private and&amp;nbsp;separated&lt;/p&gt;
</summary><content type="html">&lt;p&gt;The idea is simple: each of the &lt;span class="caps"&gt;SSH&lt;/span&gt; keys should grant access to only one system.
The rationale is that if one of the keys is compromised the other keys are not. Simple,&amp;nbsp;really.&lt;/p&gt;
&lt;p&gt;To do it, the first step is to generate the keys&amp;nbsp;separatedely:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
ssh-keygen -t rsa -b &lt;span class="m"&gt;4096&lt;/span&gt; -C &lt;span class="s2"&gt;&amp;quot;yourmail&amp;#64;mail.com&amp;quot;&lt;/span&gt; -f ~/.ssh/github
&lt;/pre&gt;
&lt;p&gt;This command generates a key pair with 4096 bits and the email above as signature.
The key will be on the full path and the filename,
something like &lt;code&gt;/home/user/.ssh/github&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now the &lt;cite&gt;config&lt;/cite&gt; file for &lt;cite&gt;ssh&lt;/cite&gt; must be configured to correspond to the expected&amp;nbsp;keys:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
Host github.com
    IdentityFile ~/.ssh/github

Host bitbucket.com
    IdentityFile ~/.ssh/bitbucket
&lt;/pre&gt;
&lt;p&gt;and that´s it. For each server now a different key is used. A good reference is
&lt;a class="reference external" href="https://confluence.atlassian.com/bitbucket/configure-multiple-ssh-identities-for-gitbash-mac-osx-linux-271943168.html"&gt;https://confluence.atlassian.com/bitbucket/configure-multiple-ssh-identities-for-gitbash-mac-osx-linux-271943168.html&lt;/a&gt;&lt;/p&gt;
</content><category term="ssh"></category><category term="keys"></category></entry><entry><title>Development with Python on Linux is turning into Windows</title><link href="http://mfactor.sdf.org/blog/2015_03_15_dev_python_linux_windows.html" rel="alternate"></link><published>2015-03-15T06:05:00-03:00</published><updated>2015-03-15T06:05:00-03:00</updated><author><name>ispmarin</name></author><id>tag:mfactor.sdf.org,2015-03-15:/blog/2015_03_15_dev_python_linux_windows.html</id><summary type="html">&lt;p&gt;Yes, the title is a flamebait, but please bear with&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="https://dxprience.files.wordpress.com/2014/08/bear-with-me.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;As I said in the last post, I installed Debian on my Chromebook using
&lt;a class="reference external" href="https://github.com/dnschneid/crouton"&gt;crouton&lt;/a&gt;. It worked quite
easily, &lt;span class="caps"&gt;KDE&lt;/span&gt; installed. But then I started building my dev environment,
using Python. But first, a quick&amp;nbsp;digression.&lt;/p&gt;
&lt;p&gt;I have to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yes, the title is a flamebait, but please bear with&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image0" src="https://dxprience.files.wordpress.com/2014/08/bear-with-me.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;As I said in the last post, I installed Debian on my Chromebook using
&lt;a class="reference external" href="https://github.com/dnschneid/crouton"&gt;crouton&lt;/a&gt;. It worked quite
easily, &lt;span class="caps"&gt;KDE&lt;/span&gt; installed. But then I started building my dev environment,
using Python. But first, a quick&amp;nbsp;digression.&lt;/p&gt;
&lt;p&gt;I have to use Windows at work now. I know, I know, but there&amp;#8217;s no way
around it. Setting up a dev environment on Windows is very very tricky
and not very funny, especially if you don&amp;#8217;t have admin rights on your
own machine. I managed to get the basics working, but it was not easy.
The loop search internet-&amp;gt;download-&amp;gt;install-&amp;gt;internet was not fun at all
after all these years with&amp;nbsp;apt-get.&lt;/p&gt;
&lt;p&gt;So, when I started setting up my environment on the Debian on the
chromebook it struck me. &lt;em&gt;I&amp;#8217;m doing exactly as I done in Windows.&lt;/em&gt; How
so? First, I installed Python 2.7.9 via apt-get. Nothing funny so far.
Then I decided to use a virtualenv. Ops. To install it I can use the
Debian package or download a newer version directly. Ok, ok&amp;#8230; but then
it comes virtualenvwrapper. Ok, I still can install it using the Debian
repos, but it&amp;#8217;s an old version. After I set up my virtualenv, I start
using pip. Pip is ok, but now I have to download all packages from
different places. I know that this is one of the features of pip, but
nonetheless is divorced from the operating system, there is no search to
speak about inside pip, there is no update all, etc etc. Ok, but there
is still hope, right? Next thing, PyCharm. Bam, gotta go back to the
internet, download it, install&amp;#8230; Windows&amp;nbsp;again!&lt;/p&gt;
&lt;p&gt;You can argue that I chose to use these packages, that there are several
in the Debian repos that can satisfy my needs. That this is just a rant
that &amp;#8220;package A or B is not in the repos!&amp;#8221;, and I tend to agree with
you. But I didn&amp;#8217;t have to do nothing like this when I was developing in
C, C++ or Fortran, including libraries, so I started thinking that maybe
the Python tools integration with Debian or any other Linux distro is
not as good as it could be. What can we do to make it easier? So far I
don&amp;#8217;t know. Any&amp;nbsp;suggestions?&lt;/p&gt;
</content><category term="debian"></category><category term="pip"></category><category term="PyCharm"></category><category term="Python"></category></entry><entry><title>New adventures in Lenovo territory: Ideapad Y500</title><link href="http://mfactor.sdf.org/blog/2013_05_14_lenovo-debian-ideapad-y500.html" rel="alternate"></link><published>2013-05-14T16:31:00-03:00</published><updated>2013-05-14T16:31:00-03:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2013-05-14:/blog/2013_05_14_lenovo-debian-ideapad-y500.html</id><summary type="html">&lt;p&gt;After a long struggle of finding a new laptop and deciding to let my
trusted &lt;span class="caps"&gt;XPS&lt;/span&gt; 15 go, finally I got a Lenovo Ideapad Y500, an awesome
configuration for the price. So this is going to be my journal of the
process of getting this machine to&amp;nbsp;work!&lt;/p&gt;
&lt;p&gt;2013-05-14, 12 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After a long struggle of finding a new laptop and deciding to let my
trusted &lt;span class="caps"&gt;XPS&lt;/span&gt; 15 go, finally I got a Lenovo Ideapad Y500, an awesome
configuration for the price. So this is going to be my journal of the
process of getting this machine to&amp;nbsp;work!&lt;/p&gt;
&lt;p&gt;2013-05-14, 12:35:00 The note arrives. The lenovo people didn&amp;#8217;t put the
number of my apartment on my order, so I had to lurk and wait the &lt;span class="caps"&gt;UPS&lt;/span&gt;
girl on my door. Good thing I have good ears! She was very nice, and
more importantly, she asked for a piece of &lt;span class="caps"&gt;ID&lt;/span&gt; before handling the&amp;nbsp;notebook.&lt;/p&gt;
&lt;p&gt;2013-05-14, 12:40:00 Unpacked! The packaging is very spartan, only the
most basic stuff came. Quite nice, though, no&amp;nbsp;frills.&lt;/p&gt;
&lt;p&gt;2013-05-14, 12:42:00 Turned it on, checked it, did the entire Windows 8
login process. The screen is marvelous, quite impressed with the&amp;nbsp;quality.&lt;/p&gt;
&lt;p&gt;2013-05-14, 12:43:00 And removed all partitions that came with the note,
including the recovery and the other stuff! Gone! Gone now! Bye bye
Windows 8! Hello Windows 7! I had to disable Secure Boot and &lt;span class="caps"&gt;UEFI&lt;/span&gt;, set
the boot mode to legacy and legacy first devices, removed _all_
partitions, and plug a Windows 7 installation from a &lt;span class="caps"&gt;USB&lt;/span&gt; key. The boot
menu button is on the left side, just next to the power plug. Shutdown
the note and press the button. Booted, ran,&amp;nbsp;ok.&lt;/p&gt;
&lt;p&gt;2013-05-14, 12:48:00 Finished the installation, here it comes the first
boot. Decided to use &lt;span class="caps"&gt;250GB&lt;/span&gt; for windows, gonna use around 60 for Debian,
and the rest is going to be /home. The only reason why the windows
partition is that big is because of the games. C&amp;#8217;mon, it has a friggin
Nvidia 750M on&amp;nbsp;it!&lt;/p&gt;
&lt;p&gt;2013-05-14, 13:00:00 The Windows 7 installation finished, but of course
there are no drivers. I&amp;#8217;m downloading the drivers from the lenovo
website to an external drive to be able to install&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;2013-05-14, 13:25:00 After installing all drivers, one by one, I
realized that Nvidia stable driver can&amp;#8217;t handle the &lt;span class="caps"&gt;GT&lt;/span&gt; 750M, so I had to
go back to the lenovo site to get the driver from them, and realize that
is just the beta driver from Nvidia&amp;#8230; Rebooted (3 times now), and &lt;span class="caps"&gt;OMFG&lt;/span&gt;
the screen is nice. Fuck, it is nice. Still tons of stuff to install in
Windows, but now is time to install Debian! Copied the netinst image
(using dd, dd if=&amp;lt;image&amp;gt; of=/dev/sdc bs=4m; sync) from debian netinst,
clicked the button on the side, plugged, and it booted. Installing&amp;nbsp;now!&lt;/p&gt;
&lt;p&gt;2013-05-14, 13:33:00 Hit my first snag with Debian. It asked the
firmware for the wireless card, so I had to go to
&lt;a class="reference external" href="http://wireless.kernel.org/en/users/Drivers/iwlwifi/?n=downloads#Firmware"&gt;here&lt;/a&gt;
and copied to the external drive. It didn&amp;#8217;t find the firmware, even if
it was in the folder. Had to copy the .tgz to make it work, not only the
ucode. Trying to read it&amp;nbsp;now.&lt;/p&gt;
&lt;p&gt;2013-05-14, 13:43:00 It didn&amp;#8217;t work, so I had to proceed with the
installation without the firmware for the wifi. Gonna have to copy the
.deb later. And now this is tempting: The debian installer is allowing
me to install it on the internal &lt;span class="caps"&gt;SSD&lt;/span&gt;! But when I tried, it failed. It
also failed to see the &lt;span class="caps"&gt;GPT&lt;/span&gt; Windows partitions, so I had to hit the webs
to find how to do it. Had to go to the &amp;#8220;expert install&amp;#8221;. The expert
install also allowed me to choose the &lt;span class="caps"&gt;NTFS&lt;/span&gt; partition handler, so maybe
that was the problem with the external harddrive. I&amp;#8217;m already
downloading an Ubuntu 13.04&amp;nbsp;image&amp;#8230;&lt;/p&gt;
&lt;p&gt;2013-05-14, 14:05:00 And Debian refuses to see the &lt;span class="caps"&gt;GPT&lt;/span&gt; partition table.
Gonna have to reset everything, reinstall windows with a &lt;span class="caps"&gt;MBR&lt;/span&gt; partition,
and then reinstall the rest.&amp;nbsp;Damn.&lt;/p&gt;
&lt;p&gt;2013-05-14, 14:47:00 Had lunch - not really important, but good to know
that I didn&amp;#8217;t take that amout of time :-) So now reinstalling windows.
This time I&amp;#8217;ll try to install Debian before installing everything in&amp;nbsp;windows.&lt;/p&gt;
&lt;p&gt;2013-05-14, 15:08:00 Finally! Debian found all partitions and now is
hapilly installing. No luck with the wifi, though, gonna have to do it
after installing the&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;2013-05-14, 15:26:00 After finishing the Debian installation &lt;span class="caps"&gt;GRUB&lt;/span&gt; only
booted windows. I said a big no to Debian and went Ubuntu. Not because I
can&amp;#8217;t install Debian, but because I don&amp;#8217;t have the time. Ubuntu booted
and already connected to my wireless network. And it failed to write to
the hard disk. Linux on this machine is getting more and more
frustrating to install. Downloading a new Ubuntu image and checking the
&lt;span class="caps"&gt;MD5&lt;/span&gt;, just to be&amp;nbsp;sure.&lt;/p&gt;
&lt;p&gt;2013-05-14, 16:10:00 Image checksummed, copied and booted. Ubuntu
installation is almost finished, still&amp;nbsp;running.&lt;/p&gt;
&lt;p&gt;2013-05-14, 16:30:00 Ubuntu installation finished! There is now a
problem with the Windows install. The Windows install put it on the &lt;span class="caps"&gt;SSD&lt;/span&gt;,
and I only got grub working after removing the Windows partition from
the &lt;span class="caps"&gt;SSD&lt;/span&gt;. Ubuntu boots, but windows dont&amp;#8230; So here we go again get a
Windows live usb to boot and fix the mbr _one more time_. If I knew
that before I could have kept Debian. But, alas&amp;#8230; Installing &lt;span class="caps"&gt;KDE&lt;/span&gt;&amp;nbsp;now.&lt;/p&gt;
&lt;p&gt;2013-05-14, 18:00:00 &lt;span class="caps"&gt;KDE&lt;/span&gt; installed, Ubuntu system ready to rock. But for
some reason the Windows partittion, although is intact, can&amp;#8217;t be found
to boot, and can&amp;#8217;t boot windows from the &lt;span class="caps"&gt;USB&lt;/span&gt; key. Finishing burning an
old fashioned &lt;span class="caps"&gt;DVD&lt;/span&gt; with the Windows 7 image and will try to recover. If
it works, great; if it doesn&amp;#8217;t, so sorry, gonna move to the new computer
and Windows will be installed&amp;nbsp;later.&lt;/p&gt;
&lt;p&gt;2013-05-14, 18:09:00 Windows booted from the &lt;span class="caps"&gt;DVD&lt;/span&gt;, gonna try to fix it
from the recovery menu. Ran &amp;nbsp;the automatic repair, and it fixed the
windows&amp;nbsp;installation.&lt;/p&gt;
&lt;p&gt;2013-05-14, 18:30:00 Booted on Ubuntu again, after Windows was running,
did the usual installations steps for repairing grub, e voilá! Both
systems are ok! But it should be noted that I had to do a grub-install
/dev/sda, the mSATA, &lt;span class="caps"&gt;NOT&lt;/span&gt; the sda disk. What a&amp;nbsp;mess!&lt;/p&gt;
&lt;p&gt;Now is copying all files to the new note&amp;nbsp;:-)&lt;/p&gt;
</content><category term="debian"></category><category term="ideapad"></category><category term="ideapad y500"></category><category term="lenovo"></category><category term="linux"></category><category term="ubuntu"></category><category term="windows"></category><category term="windows 7"></category><category term="windows 8"></category></entry><entry><title>Using Virtual Machines and Ubuntu to Keep a Sane Development Environment</title><link href="http://mfactor.sdf.org/blog/2012_12_11_vm_ubuntu.html" rel="alternate"></link><published>2012-12-11T15:06:00-02:00</published><updated>2012-12-11T15:06:00-02:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2012-12-11:/blog/2012_12_11_vm_ubuntu.html</id><summary type="html">&lt;p&gt;I tried. I swear I tried. But it&amp;#8217;s plain and simple painful to develop
in Fortran in Windows. There, I said it. Is it &lt;em&gt;possible&lt;/em&gt;? Yes. Is it
easy? Not a chance in&amp;nbsp;Hell.&lt;/p&gt;
&lt;p&gt;First of all, there aren&amp;#8217;t a lot of options for Fortran Compilers for
the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I tried. I swear I tried. But it&amp;#8217;s plain and simple painful to develop
in Fortran in Windows. There, I said it. Is it &lt;em&gt;possible&lt;/em&gt;? Yes. Is it
easy? Not a chance in&amp;nbsp;Hell.&lt;/p&gt;
&lt;p&gt;First of all, there aren&amp;#8217;t a lot of options for Fortran Compilers for
the Microsoft Windows Platform (and I&amp;#8217;m talking about Windows 7, I would
imagine that Windows 8 would be worse.). The most sane one, Intel
Fortran, is even now Intel Visual Fortran Compiler for Windows (&lt;a class="reference external" href="http://software.intel.com/en-us/forums/intel-visual-fortran-compiler-for-windows"&gt;I kid
you
not&lt;/a&gt;.).
And then there&amp;#8217;s the interfaces. Microsoft provides for free the
&lt;a class="reference external" href="http://www.microsoft.com/visualstudio/eng/products/visual-studio-express-products"&gt;Express&lt;/a&gt;
suit, so things are not that bad, right? No. The Express suit can&amp;#8217;t use
Intel Visual Fortran Compiler for Windows support, so you&amp;#8217;re out of luck
unless you buy the full Visual Studio Suite, and which one I dunno -
never understood the Ultimate/Professional/Premium/Alien/KitchenCleaning
version confusion. Eclipse &lt;span class="caps"&gt;CDT&lt;/span&gt;/Photran would be a good one instead,
right? No. Intel Visual Fortran Compiler for Windows also doesn&amp;#8217;t
support Eclipse &lt;span class="caps"&gt;CDT&lt;/span&gt;/Photran. Where to&amp;nbsp;run?&lt;/p&gt;
&lt;p&gt;Maybe MinGW could help us? Yes, maybe. Both Intel Visual Fortran
Compiler for Windows and MinGW can compile a Fortran source file from
the command line, but we&amp;#8217;re in friggin Windows, right? Also, for large
projects, code completion and syntax errors are a must. I didn&amp;#8217;t try the
&lt;span class="caps"&gt;LLVM&lt;/span&gt;/dragonegg and mingw-fortran combination, but as I wouldn&amp;#8217;t get the
advantages that I&amp;#8217;m looking for, I decided that if I have to use a
Windows machine, no one would prevent to use a sane, decent Linux
environment &lt;em&gt;inside&lt;/em&gt; that Windows machine. Ubuntu plus VirtualBox it&amp;nbsp;is!&lt;/p&gt;
&lt;p&gt;Downloaded 12.10-amd64, installed in a &lt;span class="caps"&gt;VDI&lt;/span&gt; image, all with standard
options. Of course Ubuntu would give me some headaches: had to uninstall
that creepy shopping lens, install Google Chrome. Google Chrome
installation was interesting: the Software Center gave me an &amp;#8220;This
package is of low quality. Don&amp;#8217;t install it.&amp;#8221; Just hit ignore and
install it anyway. And Ubuntu froze. Unity recomposed itself, but I
figured that there is something funky going on between X and VirtualBox,
so I went back to VirtualBox settings and disabled the 3D video, what
made things a bit better - but still no changing resolution with
changing the size of the &lt;span class="caps"&gt;VM&lt;/span&gt; window. Strange. Will probably install &lt;span class="caps"&gt;KDE&lt;/span&gt;
anyway&amp;#8230; so I plugged my external drive to copy all the files to the
&lt;span class="caps"&gt;VM&lt;/span&gt;. And then, Compiz hanged again. Definitely annoying. So while I
waited to see what the 12.10 would do (keep freezed, it seems), decided
to use my &lt;span class="caps"&gt;12GB&lt;/span&gt; of &lt;span class="caps"&gt;RAM&lt;/span&gt; and my Core i7 and hit an 12.04 installation. It
started to be a little ironic that I was running away from one platform
that is impossible to program to another one that refuses to work to
begin with. I decided to keep going, nonetheless, and see where I would&amp;nbsp;get.&lt;/p&gt;
&lt;p&gt;I still kept my hopes that things would be easier after I got an Ubuntu
running. My plan was to use the &lt;span class="caps"&gt;VM&lt;/span&gt; as a full development environment
that I could transport easily to different computers. I thought about
keeping a git repository of the important stuff, but the multiplatform
problems that I detailed above with Fortran made this a no-go. 12.04 was
much better than 12.10, and while 12.10 was still frozen, I managed to
install 12.04, update it, install the required dkms modules for
VirtualBox. Also downloaded Eclipse &lt;span class="caps"&gt;CDT&lt;/span&gt;, &lt;a class="reference external" href="http://eclipsecolorthemes.org/"&gt;Eclipse Colour
Plugin&lt;/a&gt;,
&lt;a class="reference external" href="http://pydev.org/"&gt;Pydev&lt;/a&gt; and
&lt;a class="reference external" href="http://www.eclipse.org/photran/"&gt;Photran&lt;/a&gt;,
&lt;a class="reference external" href="http://openjdk.java.net/"&gt;OpenJDK&lt;/a&gt;, everything running ok! Copied
from my external drive all the source files, all beautiful. Decided not
to use 12.10 and stick with 12.04. So now, the next step: moving the &lt;span class="caps"&gt;VM&lt;/span&gt;
to the external&amp;nbsp;drive.&lt;/p&gt;
&lt;p&gt;After copying the entire &lt;span class="caps"&gt;VB&lt;/span&gt; folder to the external drive, I would have
to test it and see if there&amp;#8217;s anything missing. And it works! Now doing
some backups on external hard drives and transporting happily my virtual
machines around. It&amp;#8217;s cumbersome to transport &lt;span class="caps"&gt;20GB&lt;/span&gt; up and down an
external drive every time, but it&amp;#8217;s better than use Windows to program,
that&amp;#8217;s for&amp;nbsp;sure!&lt;/p&gt;
&lt;p&gt;One last trick: to share a folder between the Ubuntu guest and Windows
host and be able to create soft symlinks, I had to issue this command in
the Windows&amp;nbsp;host:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
VBoxManage setextradata VM_NAME VBoxInternal2/SharedFoldersEnableSymlinksCreate/SHARE_NAME 1


Where VM_NAME is your virtual machine name. Done!
&lt;/pre&gt;
</content><category term="fortran"></category><category term="symlink"></category><category term="ubuntu"></category><category term="virtualbox"></category><category term="windows"></category></entry><entry><title>Reconfiguring the keyboard configuration on console - Debian</title><link href="http://mfactor.sdf.org/blog/2011_11_03_keyboard-console-debian.html" rel="alternate"></link><published>2011-11-03T07:23:00-02:00</published><updated>2011-11-03T07:23:00-02:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2011-11-03:/blog/2011_11_03_keyboard-console-debian.html</id><summary type="html">&lt;p&gt;dpkg-reconfigure&amp;nbsp;keyboard-configuration.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s it. No non-sense, no fuss, and no c with&amp;nbsp;accent.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;dpkg-reconfigure&amp;nbsp;keyboard-configuration.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s it. No non-sense, no fuss, and no c with&amp;nbsp;accent.&lt;/p&gt;
</content><category term="configuration"></category><category term="debian"></category><category term="server"></category></entry><entry><title>Diferenças entre Debian e Ubuntu, em Português</title><link href="http://mfactor.sdf.org/blog/2009_07_09_diff_debian_ubuntu_ptbr.html" rel="alternate"></link><published>2009-07-09T17:00:00-03:00</published><updated>2009-07-09T17:00:00-03:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2009-07-09:/blog/2009_07_09_diff_debian_ubuntu_ptbr.html</id><summary type="html">&lt;p&gt;Como prometido, aqui está a tradução em Português to texto do AndyC. Ele
educadamente permitiu que fosse traduzido. Qualquer erro ou omissão é de
minha inteira&amp;nbsp;responsabilidade!&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Muitas diferenças: algumas grandes, algumas pequenas, mas todas podem
ser significantes. Eu _NÃO_ estou falando com direito oficial pelo
projeto Debian, ou mesmo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Como prometido, aqui está a tradução em Português to texto do AndyC. Ele
educadamente permitiu que fosse traduzido. Qualquer erro ou omissão é de
minha inteira&amp;nbsp;responsabilidade!&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Muitas diferenças: algumas grandes, algumas pequenas, mas todas podem
ser significantes. Eu _NÃO_ estou falando com direito oficial pelo
projeto Debian, ou mesmo o Ubuntu, de qual projeto eu também sou&amp;nbsp;contribuinte.&lt;/p&gt;
&lt;p&gt;Quando o Ubuntu começou, um de seus desenvolvedores disse para mim &amp;#8220;se
pudéssemos ter chamado de Debian para desktops, nós o teríamos feito.&amp;#8221;
Este era o foco deles naquela época; desde então ele aumentou
significativamente. Mas o foco principal do Ubuntu continua sendo a
experiência do usuário e um pequeno núcleo de&amp;nbsp;aplicações.&lt;/p&gt;
&lt;p&gt;Grandemente subjetivo, feito o mais distanciado quanto eu posso!&amp;nbsp;:)&lt;/p&gt;
&lt;p&gt;++Razões/Objetivos de&amp;nbsp;Projeto++&lt;/p&gt;
&lt;p&gt;Pacotes no Ubuntu main são altamentes polidos (trabalhados)[ed], muito
bem mantidos e a Canonical/Ubuntu fazem um esforço ímpar em garantir que
a experiência seja fácil para o usuário. Isto proporciona um ou mais dos
seguintes&amp;nbsp;custos:&lt;/p&gt;
&lt;p&gt;++Escolha++&lt;/p&gt;
&lt;p&gt;Falta de escolha - você ganha um cliente de email ao invés de uma
escolha de vários &amp;#8220;out of the box&amp;#8221;, por exemplo. Escolhas são feitas
para você - é um problema de suportabilidade. Debian fornece uma maior
flexibilidade pelo preço de maior complexidade ou a vontade de suportar
suas próprias&amp;nbsp;decisões.&lt;/p&gt;
&lt;p&gt;++Arquiteturas++&lt;/p&gt;
&lt;p&gt;Falta de arquiteturas: se você não estiver usando Intel/&lt;span class="caps"&gt;AMD64&lt;/span&gt; or,
possivelmente, &lt;span class="caps"&gt;ARM&lt;/span&gt;/Sparc/&lt;span class="caps"&gt;PPC&lt;/span&gt; (dependendo do release) - você não pode
rodar Ubuntu.&amp;nbsp; O Debian rodar em mais ou menos 11 arquiteturas significa
que a) o processo às vezes é lento b) o código é debugado c) é feito de
forma portável/consertos são contribuídos&amp;nbsp;upstream.&lt;/p&gt;
&lt;p&gt;++Relação&amp;nbsp;Desenvolvedores/Usuários++&lt;/p&gt;
&lt;p&gt;Canonical tem relativamente poucos desenvolvedores pagos, uma comunidade
de desenvolvedores voluntários altamente motivada, uma comunidade de
divulgação e um orçamento de propaganda e um número vasto de novos
usuários. Isto significa que seus desenvolvedores estão em uma
desvantagem numérica massiva com relação aos usuários e portanto
prioridades devem ser escolhidas. Pacotes no universe/multiverse podem
portanto receber menos atenção que aqueles no main do&amp;nbsp;Ubuntu.&lt;/p&gt;
&lt;p&gt;Na teoria, pelo menos, cada pacote Debian é igual e tem um mantenedor
conhecido e denomeado que tem interesse :) Isto significa que o Debian
faz o trabalho pesado de empacotar e suporte inicial para pacotes não
tão comuns - isto também significa que, se eu quero suporte para o R ou
&lt;span class="caps"&gt;CRAN&lt;/span&gt;, por exemplo, eu iria diretamente para o Debian por quê o
mantenedor tem um interesse pessoal ou profissional em vê-lo funcionar
bem como um sistema&amp;nbsp;integrado.&lt;/p&gt;
&lt;p&gt;++ Ciclos de&amp;nbsp;Release++&lt;/p&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Nós demandamos áreas rigidamente definidas de dúvida e incertezas&amp;#8221; -
Canonical tem estas áreas porque solta releases a cada seis meses. Esta
consistência tem um preço: usuários esperam novas features
(características, coisas)[ed] brilhantes e superbacanas a cada release e
o ciclo de desenvolvimento é bem curto mesmo. As edições com Suporte de
Longa Vida (Long Term Support, &lt;span class="caps"&gt;LTS&lt;/span&gt;)[ed] são lançadas a cada 18 meses e
são suportadas por três anos no desktop e cinco nas de servidor. Isto é
difícil. É _muito_ difícil suportar novo hardware com as edições de
longa vida. Releases &amp;#8220;normais&amp;#8221; podem misturar pacotes do Debian estável
com o testing, instável ou até mesmo experimental (características
superbacanas) mas ganham um tempo de teste bem&amp;nbsp;curto.&lt;/p&gt;
&lt;p&gt;Debian &amp;#8220;lança quando pronto&amp;#8221; mas depois suporta esta release até um ano
após o lançamento do _próximo_ release. 22 meses para lançar o Etch,
22 meses para lançar o Lenny + 12 meses = 56 meses. Progresso lento
através do testing até o release, com atualizações regulares com
consertos de&amp;nbsp;segurança.&lt;/p&gt;
&lt;p&gt;++Liberdade vs.&amp;nbsp;Pragmatismo++&lt;/p&gt;
&lt;p&gt;O Ubuntu às vezes toma uma atitude pragmática para o &amp;#8220;software que
funciona&amp;#8221; para os usuários. Eles também tem a habilidade, que o Debian
não tem, de entrar em acordos comerciais com outras companhias por ex.
Oracle/VMWare. [&lt;span class="caps"&gt;DFSG&lt;/span&gt; - não &amp;#8220;licença apenas para o Debian&amp;#8221;]. A Canonical
se beneficia do idealismo do Debian, mas o fluxo não pode escoar no
outro sentido&amp;nbsp;:(&lt;/p&gt;
&lt;p&gt;++Atualizações entre&amp;nbsp;releases++&lt;/p&gt;
&lt;p&gt;Você pode escutar muitas visões sobre isso. OPINIÃO &lt;span class="caps"&gt;SUBJETIVA&lt;/span&gt; A &lt;span class="caps"&gt;SEGUIR&lt;/span&gt;:
&lt;span class="caps"&gt;SENTIMENTO&lt;/span&gt; &lt;span class="caps"&gt;DE&lt;/span&gt; &lt;span class="caps"&gt;DENTRO&lt;/span&gt; E EXPERIÊNCIA &lt;span class="caps"&gt;EM&lt;/span&gt; &lt;span class="caps"&gt;PARTES&lt;/span&gt; &lt;span class="caps"&gt;IGUAIS&lt;/span&gt;. Ubuntu é mais
difícil de se atualizar limpamente entre as releases e pode ser na
verdade mais rápido se reinstalar. Você certamente pode pular uma
release portanto você não precisaria ir do 8.04, 8.10, 9.04, 9.10 (por
exemplo). Isto é parcialmente uma consequência do ciclo de
desenvolvimento curto visto acima. O Debian é _muito_ mais polido aqui
/&lt;span class="caps"&gt;SUBJETIVO&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;++Sumário++&lt;/p&gt;
&lt;p&gt;Tudo isto é bem explicado no The Official Ubuntu Book e na entrevista
deMark Shuttleworth para a revista &amp;#8220;Linux Format&amp;#8221;. Também vale a pena
ler newsgroups/fora e o planet.debian.org/planet.ubuntu.com para se
apreciar melhor as abordagens semelhantes e diferentes. Debian e Ubuntu
ambos tem pontos positivos: sua (algumas vezes complicada) simbiose -
ambas as distribuições compartilham desenvolvedores, por exemplo, mas
não necessariamente objetivos - mas o Debian ganha tanto quanto o Ubuntu
se eles conseguirem consertar o maldito bug #1&amp;nbsp;:)&lt;/p&gt;
&lt;p&gt;Espero que&amp;nbsp;ajude,&lt;/p&gt;
&lt;p&gt;AndyC&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;E aí está. Os comentários em parêntesis com um [ed] depois foram termos
que acrescentei para tentar fazer um entendimento melhor. Mantive alguns
termos em inglês pelo uso corrente deles na área, ou para facilitar
mesmo (como o termo&amp;nbsp;release).&lt;/p&gt;
&lt;p&gt;Por favor, enviem correções/omissões/barbaridades que eu tenha&amp;nbsp;feito!&lt;/p&gt;
</content><category term="debian"></category><category term="tradução"></category><category term="translation"></category><category term="ubuntu"></category></entry><entry><title>Diferenças entre Ubuntu e Debian</title><link href="http://mfactor.sdf.org/blog/2009_07_09_diff_debian_ubuntu.html" rel="alternate"></link><published>2009-07-09T12:05:00-03:00</published><updated>2009-07-09T12:05:00-03:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2009-07-09:/blog/2009_07_09_diff_debian_ubuntu.html</id><summary type="html">&lt;p&gt;Lendo a lista de usuários Debian (debian-user), vi uma discussão que
achei muito interessante, sobre as principais diferenças entre o Debian
e o Ubuntu. O autor, AndyC, liberou o artigo para ser postado no
wiki.debian.org, então reproduzo aqui o post. Leitura muito
interessante, que vou tentar depois traduzir …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lendo a lista de usuários Debian (debian-user), vi uma discussão que
achei muito interessante, sobre as principais diferenças entre o Debian
e o Ubuntu. O autor, AndyC, liberou o artigo para ser postado no
wiki.debian.org, então reproduzo aqui o post. Leitura muito
interessante, que vou tentar depois traduzir para o&amp;nbsp;Português.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Post deAndrew Carter,&amp;nbsp;debian-user&amp;#64;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Lots of differences: some big, some small but all may be significant.
I&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;am _NOT_speaking in an official capacity for the Debian project or,&lt;/div&gt;
&lt;div class="line"&gt;indeed, for Ubuntu to whom I&amp;#8217;m also a contributor.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;When Ubuntu first started, one of their developers said to me &amp;#8220;If we&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;could have called it Debian for desktops, we would have done&amp;#8221;. That
was&lt;/div&gt;
&lt;div class="line"&gt;their focus then: it has widened significantly now. But the core
focus&lt;/div&gt;
&lt;div class="line"&gt;for Ubuntu remains the user experience and a small core of
applications.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Largely subjectively, from as far to the outside as I can get&amp;nbsp;:)&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Rationale/design goals&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;======================&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Packages in Ubuntu main are very highly polished, very well maintained&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;and Canonical/Ubuntu go the extra mile to make the experience easy
for&lt;/div&gt;
&lt;div class="line"&gt;the user. That comes at one or more of several costs:&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Choice&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;======&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Lack of choice - you get one mail client rather than a choice of&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;several &amp;#8220;out of the box&amp;#8221;, for example. Choices are made for you - its
an&lt;/div&gt;
&lt;div class="line"&gt;issue of supportability. Debian offers you more flexibility at the
price&lt;/div&gt;
&lt;div class="line"&gt;of complexity or being willing to support your choices.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Architectures&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;=============&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Lack of architectures: if you&amp;#8217;re not on Intel/&lt;span class="caps"&gt;AMD64&lt;/span&gt; or, possibly,&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;span class="caps"&gt;ARM&lt;/span&gt;/Sparc/&lt;span class="caps"&gt;PPC&lt;/span&gt; (depending on release) - you can&amp;#8217;t run Ubuntu. Debian&lt;/div&gt;
&lt;div class="line"&gt;running on 11 or so architectures does mean that a) the process is&lt;/div&gt;
&lt;div class="line"&gt;sometimes slow b) the code gets debugged c) is made portable/fixes
are&lt;/div&gt;
&lt;div class="line"&gt;contributed upstream.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Developer/user ratio&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;====================&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Canonical has relatively few paid developers, a highly motivated&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;volunteeer developer community, a much larger community advocacy and&lt;/div&gt;
&lt;div class="line"&gt;marketing budget and a vast number of new users. This does&lt;/div&gt;
&lt;div class="line"&gt;mean that their developers are massively outnumbered by their users
and&lt;/div&gt;
&lt;div class="line"&gt;priorities have to be set. Packages in universe/multiverse may
therefore&lt;/div&gt;
&lt;div class="line"&gt;receive less attention than those in main in Ubuntu.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;At least in theory, every package in Debian is equal and has a known
named&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;maintainer who takes an interest :) It does mean that Debian does
much of&lt;/div&gt;
&lt;div class="line"&gt;the heavy lifting of packaging and initial support for out of the way&lt;/div&gt;
&lt;div class="line"&gt;packages - it also means that, if I want support for R and &lt;span class="caps"&gt;CRAN&lt;/span&gt;, for
example,&lt;/div&gt;
&lt;div class="line"&gt;I&amp;#8217;d go straight to Debian because the maintainer has a personal and&lt;/div&gt;
&lt;div class="line"&gt;professional interest for seeing it work well as an integrated
system.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Release cycles&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;==============&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&amp;#8220;We demand rigidly defined areas of doubt and uncertainty&amp;#8221; - Canonical&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;has those because it releases once every six months. This consistency&lt;/div&gt;
&lt;div class="line"&gt;comes at a price: users expect new whizzy features with each release
and&lt;/div&gt;
&lt;div class="line"&gt;the development cycle is very short indeed. Long term support
releases&lt;/div&gt;
&lt;div class="line"&gt;happen every 18 months and are supported for three years on the&lt;/div&gt;
&lt;div class="line"&gt;desktop/five years on the server. That&amp;#8217;s hard. It&amp;#8217;s _very_ hard to&lt;/div&gt;
&lt;div class="line"&gt;support new hardware with long term releases. &amp;#8220;Normal&amp;#8221; releases may
mix&lt;/div&gt;
&lt;div class="line"&gt;packages from Debian stable with testing, unstable or even
experimental&lt;/div&gt;
&lt;div class="line"&gt;(whizzy features) but get only a short testing time.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Debian &amp;#8220;releases when ready&amp;#8221; but then supports that release until
about&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;a year after the _next_ release. 22 months to release Etch, 22
months to&lt;/div&gt;
&lt;div class="line"&gt;release Lenny + 12 months = 56 months. Slow moving progress through&lt;/div&gt;
&lt;div class="line"&gt;testing to release, regular point updates with security fixes.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Freeness vs. pragmatism&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;=======================&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Ubuntu may sometimes take a pragmatic attitude for &amp;#8220;software that
works&amp;#8221;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;for users. They also have the ability, which Debian does not, to
enter&lt;/div&gt;
&lt;div class="line"&gt;into commercial agreements for third party apps e.g. Oracle/VMWare.&lt;/div&gt;
&lt;div class="line"&gt;[&lt;span class="caps"&gt;DFSG&lt;/span&gt; - not &amp;#8220;licence just for Debian&amp;#8221;]. Canonical benefits from
Debian&lt;/div&gt;
&lt;div class="line"&gt;idealism but it can&amp;#8217;t flow the other way :(&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Upgrades between releases&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;=========================&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;You&amp;#8217;ll hear lots of views on this. &lt;span class="caps"&gt;SUBJECTIVE&lt;/span&gt; &lt;span class="caps"&gt;OPINION&lt;/span&gt; &lt;span class="caps"&gt;FOLLOWS&lt;/span&gt;:&lt;span class="caps"&gt;GUT&lt;/span&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;span class="caps"&gt;FEELING&lt;/span&gt; &lt;span class="caps"&gt;AND&lt;/span&gt; &lt;span class="caps"&gt;EXPERIENCE&lt;/span&gt; &lt;span class="caps"&gt;IN&lt;/span&gt; &lt;span class="caps"&gt;EQUAL&lt;/span&gt; &lt;span class="caps"&gt;PARTS&lt;/span&gt;. Ubuntu is harder to upgrade&lt;/div&gt;
&lt;div class="line"&gt;cleanly between releases and it may actually be quicker to reinstall.&lt;/div&gt;
&lt;div class="line"&gt;You certainly can&amp;#8217;t skip a release so you&amp;#8217;d need to do 8.04, 8.10,&lt;/div&gt;
&lt;div class="line"&gt;9.04, 9.10 (for example). This is partly a consequence of short
release&lt;/div&gt;
&lt;div class="line"&gt;cycles above. Debian is _far_ more polished here /&lt;span class="caps"&gt;SUBJECTIVE&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Summary&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;=======&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;All of this is very well explained by The Official Ubuntu Book and
Mark&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Shuttleworth&amp;#8217;s latest interview for ?? Linux Format ?? magazine.&lt;/div&gt;
&lt;div class="line"&gt;Its also worth reading newsgroups/fora and planet.debian.org /&lt;/div&gt;
&lt;div class="line"&gt;planet.ubuntu.com to get a better appreciation of the similarities
and&lt;/div&gt;
&lt;div class="line"&gt;differences in approach. Debian and Ubuntu each have strengths: its a&lt;/div&gt;
&lt;div class="line"&gt;(sometimes uneasy) symbiosis - both distributions share many of the
same&lt;/div&gt;
&lt;div class="line"&gt;developers, for example, but not necessarily end goals - but Debian&lt;/div&gt;
&lt;div class="line"&gt;gains as much as Ubuntu if they&amp;#8217;ll just fix their bloody bug #1 :)&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Hope this&amp;nbsp;helps,&lt;/p&gt;
&lt;p&gt;AndyC&lt;/p&gt;
</content><category term="debian"></category><category term="development"></category><category term="open source"></category><category term="ubuntu"></category></entry><entry><title>sudoers file with restricted permissions</title><link href="http://mfactor.sdf.org/blog/2009_05_13_sudoers_perm.html" rel="alternate"></link><published>2009-05-13T18:10:00-03:00</published><updated>2009-05-13T18:10:00-03:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2009-05-13:/blog/2009_05_13_sudoers_perm.html</id><summary type="html">&lt;p&gt;O acesso ao sudo é uma ferramenta bem poderosa no linux, mas que
geralmente é mal usada, permitindo que qualquer comando possa ser feito
com sudo, o que é um risco de segurança. O ideal é que os usuários
tenham acesso root a nada, ou a somente os comandos &lt;em&gt;realmente …&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;O acesso ao sudo é uma ferramenta bem poderosa no linux, mas que
geralmente é mal usada, permitindo que qualquer comando possa ser feito
com sudo, o que é um risco de segurança. O ideal é que os usuários
tenham acesso root a nada, ou a somente os comandos &lt;em&gt;realmente&lt;/em&gt;
necessários. Aqui no &lt;span class="caps"&gt;LHC&lt;/span&gt; temos um novo aluno que está montando a
plataforma web dos dados de campo. Ele vai precisar acesso ao apache2 e
ao mysql. Para isso, o /etc/sudoers foi configurado da seguinte forma:#&amp;nbsp;/etc/sudoers&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#
# This file MUST be edited with the 'visudo' command as root.
#
# See the man page for details on how to write a sudoers file.
#

Defaults&amp;nbsp;&amp;nbsp; &amp;nbsp;env_reset

# Host alias specification

# User alias specification

# Cmnd alias specification
Cmnd_Alias APACHE_START = /etc/init.d/apache2 start
Cmnd_Alias APACHE_STOP = /etc/init.d/apache2 stop
Cmnd_Alias APACHE_RESTART = /etc/init.d/apache2 restart
Cmnd_Alias MYSQL = /usr/bin/mysql
# User privilege specification
root&amp;nbsp;&amp;nbsp; &amp;nbsp;ALL=(ALL) ALL
ispmarin ALL=(ALL) NOPASSWD:ALL
pucciarelli ALL=APACHE_START, APACHE_STOP,APACHE_RESTART,MYSQL
# Uncomment to allow members of group sudo to not need a password
# (Note that later entries override this, so you might need to move
# it further down)
# %sudo ALL=NOPASSWD: ALL
&lt;/pre&gt;
&lt;p&gt;O que permite que o usuário só acesse esses comandos,&amp;nbsp; o que é&amp;nbsp;excelente.&lt;/p&gt;
&lt;p&gt;Edit 23/05: está funcionando a contento. O usuário está conseguindo
trabalhar corretamente com o Drupal na isengard sem precisar de mais
acesso ao sistema, o que é ótimo, pois a isengard é a minha máquina de
trabalho diário e meu servidor de&amp;nbsp;arquivos.&lt;/p&gt;
</content><category term="config"></category><category term="debian"></category><category term="sudo"></category></entry></feed>
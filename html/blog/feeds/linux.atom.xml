<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Another Life Form - Linux</title><link href="http://mfactor.sdf.org/blog/" rel="alternate"></link><link href="http://mfactor.sdf.org/blog/feeds/linux.atom.xml" rel="self"></link><id>http://mfactor.sdf.org/blog/</id><updated>2016-07-31T09:25:00-03:00</updated><entry><title>Managing passwords with pass</title><link href="http://mfactor.sdf.org/blog/2017_07_31_manage_pass.html" rel="alternate"></link><published>2016-07-31T09:25:00-03:00</published><updated>2016-07-31T09:25:00-03:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2016-07-31:/blog/2017_07_31_manage_pass.html</id><summary type="html">&lt;p class="first last"&gt;How I stopped using LastPass and love&amp;nbsp;pass&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I&amp;#8217;ve been thinking about dumping LastPass for a while now, especially after it was bought by
some company whatever. But the way that LastPass is useful is quite&amp;nbsp;awesome:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;can generate&amp;nbsp;passwords&lt;/li&gt;
&lt;li&gt;stores all&amp;nbsp;passwords&lt;/li&gt;
&lt;li&gt;fill login forms automatically (the best feature for&amp;nbsp;me)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So how can I replace it with something with at least similar functionalities but
under my&amp;nbsp;control?&lt;/p&gt;
&lt;p&gt;The answer to that is &lt;a class="reference external" href="https://www.passwordstore.org/"&gt;pass&lt;/a&gt;. It stores the
passwords as encrypted text with &lt;a class="reference external" href="https://www.gnupg.org/"&gt;&lt;span class="caps"&gt;GPG&lt;/span&gt;&lt;/a&gt; on the local filesystem.
The feedback was so good that other people started using it and developed more
resources for it, as a &lt;a class="reference external" href="https://qtpass.org/"&gt;&lt;span class="caps"&gt;GUI&lt;/span&gt;&lt;/a&gt; and a &lt;cite&gt;Firefox extension &amp;lt;https://github.com/jvenant/passff#&amp;gt;_&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll describe how I managed to set it&amp;nbsp;up.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;span class="caps"&gt;GPG&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;First, let&amp;#8217;s set up the &lt;span class="caps"&gt;GPG&lt;/span&gt;&amp;nbsp;key:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install gpgv2
&lt;/pre&gt;
&lt;p&gt;and generate a&amp;nbsp;key:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
gpg --gen-key
&lt;/pre&gt;
&lt;p&gt;If the key process takes it too long because of the entropy&amp;nbsp;generation,&lt;/p&gt;
&lt;blockquote&gt;
&lt;strong&gt;We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.
Not enough random bytes available.  Please do some other work to give
the &lt;span class="caps"&gt;OS&lt;/span&gt; a chance to collect more entropy! (Need 210 more bytes)&lt;/strong&gt;&lt;/blockquote&gt;
&lt;p&gt;install the &lt;cite&gt;rng-tools&lt;/cite&gt;:&lt;/p&gt;
&lt;blockquote&gt;
sudo apt-get install rng-tools&lt;/blockquote&gt;
&lt;p&gt;and generate entropy using the &lt;a class="reference external" href="http://serverfault.com/questions/214605/gpg-not-enough-entropy"&gt;command&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
sudo rngd -r /dev/urandom&lt;/blockquote&gt;
&lt;p&gt;to generate enough entropy for &lt;span class="caps"&gt;GPG&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;pass&lt;/h2&gt;
&lt;p&gt;So now let&amp;#8217;s install &lt;cite&gt;pass&lt;/cite&gt;:&lt;/p&gt;
&lt;blockquote&gt;
sudo apt-get instal pass&lt;/blockquote&gt;
&lt;p&gt;and create a password&amp;nbsp;store:&lt;/p&gt;
&lt;blockquote&gt;
pass init &amp;lt;email used to generate the &lt;span class="caps"&gt;GPG&lt;/span&gt; key&amp;gt;&lt;/blockquote&gt;
&lt;p&gt;You can now start adding passwords. As I said, I used LassPass heavily, so I had tons of
passwords stored. To convert them I exported on LastPass my passwords to a &lt;span class="caps"&gt;CSV&lt;/span&gt; and used
&lt;a class="reference external" href="https://git.zx2c4.com/password-store/tree/contrib/importers/lastpass2pass.rb"&gt;this tool&lt;/a&gt;
to import the passwords to pass. I now could access all my passwords from the command&amp;nbsp;line.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pass-with-git"&gt;
&lt;h2&gt;pass with&amp;nbsp;git&lt;/h2&gt;
&lt;p&gt;But one of the nicest things about Lastpass is be able to synchronize the passwords over the web.
pass can manage the passwords as a git repository, so that&amp;#8217;s the route I chose. After importing
the passwords I initialized the password store as a git&amp;nbsp;repository:&lt;/p&gt;
&lt;blockquote&gt;
pass git init&lt;/blockquote&gt;
&lt;p&gt;Now the changes on the password file would be automatically commited. Using my &lt;a class="reference external" href="http://sdf.org/?tutorials/metaarray"&gt;meta array&lt;/a&gt;
account on &lt;a class="reference external" href="http://sdf.org"&gt;&lt;span class="caps"&gt;SDF&lt;/span&gt;&lt;/a&gt;, I created a bare remote repository on it (git init &amp;#8212;bare) and added as a remote repository
on my pass&amp;nbsp;folder:&lt;/p&gt;
&lt;blockquote&gt;
pass git remote add origin ma.sdf.org:~/git/pass&lt;/blockquote&gt;
&lt;p&gt;where the bare git repository is at &lt;cite&gt;~/git/pass&lt;/cite&gt;. After that a&amp;nbsp;simple&lt;/p&gt;
&lt;blockquote&gt;
pass git push -u &amp;#8212;all&lt;/blockquote&gt;
&lt;p&gt;commited all passwords to the&amp;nbsp;repo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="alternatives-to-access-the-passwords"&gt;
&lt;h2&gt;Alternatives to access the&amp;nbsp;passwords&lt;/h2&gt;
&lt;p&gt;There is a Firefox &lt;a class="reference external" href="https://addons.mozilla.org/pt-BR/firefox/addon/passff/"&gt;extension&lt;/a&gt; that can access
the stored passwords. It&amp;#8217;s almost as good as Lastpass, but only for&amp;nbsp;Firefox.&lt;/p&gt;
&lt;/div&gt;
</content><category term="security"></category><category term="passwords"></category></entry><entry><title>Why OS packages (.deb) are out of fashion and the rage is self-update</title><link href="http://mfactor.sdf.org/blog/2016_02_14_os_deb_update.html" rel="alternate"></link><published>2016-02-14T00:00:00-02:00</published><updated>2016-02-14T00:00:00-02:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2016-02-14:/blog/2016_02_14_os_deb_update.html</id><summary type="html">&lt;p&gt;Why several programs are not packaged in operating&amp;nbsp;systems&lt;/p&gt;</summary><content type="html">&lt;p&gt;anymore and everyone are doing self-updates, and how this can be dangerous
status:&amp;nbsp;draft&lt;/p&gt;
&lt;p&gt;Show my &lt;code&gt;bin&lt;/code&gt; folder, structure and commands. Number of sofwares 
that are not packaged by &lt;span class="caps"&gt;OS&lt;/span&gt; anymore, time to package, rapid fire versions and update channels. Why this can be dangerous (Mac update package platform, ars&amp;nbsp;technica).&lt;/p&gt;</content><category term="os"></category><category term="debian"></category><category term="deb"></category><category term="tools"></category></entry><entry><title>Using `conda` instead of `pip`</title><link href="http://mfactor.sdf.org/blog/2015_11_26_conda.html" rel="alternate"></link><published>2015-11-26T00:00:00-02:00</published><updated>2015-11-26T22:42:00-02:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2015-11-26:/blog/2015_11_26_conda.html</id><summary type="html">&lt;p&gt;Trying out conda for managing Python&amp;nbsp;environments&lt;/p&gt;</summary><content type="html">&lt;p&gt;I&amp;#8217;ve been struggling with which environment use to develop on Python applications that 
are going to be moved around and run on different systems. There is Hadoop and Spark on the mix, so things are getting
more complicated, too. Thinking about my environment, I have the following&amp;nbsp;requisites:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Determine the level of isolation of the&amp;nbsp;application.&lt;/li&gt;
&lt;li&gt;Point to the &lt;code&gt;python&lt;/code&gt; binary that I&amp;nbsp;want.&lt;/li&gt;
&lt;li&gt;Can be moved&amp;nbsp;around &lt;/li&gt;
&lt;li&gt;Can be deployed and used in systems without&amp;nbsp;internet&lt;/li&gt;
&lt;li&gt;Can be deployed and used without root&amp;nbsp;access&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So far I have two alternatives: &lt;code&gt;virtualenv&lt;/code&gt; and &lt;code&gt;Anaconda&lt;/code&gt;. I&amp;#8217;ve been using &lt;code&gt;virtualenv&lt;/code&gt; for a while so I know 
better the limitations. I tried, then, to use &lt;code&gt;Anaconda&lt;/code&gt; to see how it works. The installer is heavy but it comes
with several useful things (&lt;code&gt;pandas&lt;/code&gt;, for example), so that&amp;#8217;s ok. Things got a bit complicated using the environments,
though, with the &lt;code&gt;conda&lt;/code&gt; application. To keep point 2 I changed the recommended &lt;code&gt;PATH&lt;/code&gt; variable&amp;nbsp;to &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;export PATH=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;:/home/ispmarin/bin:/home/ispmarin/bin/anaconda3/bin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;so I get the system &lt;code&gt;python&lt;/code&gt; executable but all the other tools from &lt;code&gt;Anaconda&lt;/code&gt;. Nice. Then I created and environment
and installed some stuff there. Also works as expected, although it points to the &lt;code&gt;python&lt;/code&gt; binary from inside &lt;code&gt;Anaconda&lt;/code&gt;.
Acceptable. Then I deactivated the environment, and to my surprise, the &lt;code&gt;python&lt;/code&gt; executable didn&amp;#8217;t change back to 
the system one! Damn, that&amp;#8217;s a problem right there. There 
&lt;a href="http://stackoverflow.com/questions/33955516/anaconda-activate-deactivate-cycle-messes-up-path"&gt;are&lt;/a&gt; 
&lt;a href="https://github.com/conda/conda/issues/1846"&gt;several&lt;/a&gt; 
&lt;a href="https://github.com/conda/conda/pull/1727"&gt;bug&lt;/a&gt; reports on the &lt;code&gt;conda&lt;/code&gt; github, but still no final solution. So &lt;code&gt;conda&lt;/code&gt; is
out for&amp;nbsp;now.&lt;/p&gt;</content><category term="python"></category><category term="pip"></category><category term="conda"></category></entry><entry><title>Desktop Files on Debian/Ubuntu and XDG</title><link href="http://mfactor.sdf.org/blog/2015_11_23_desktop-files.html" rel="alternate"></link><published>2015-11-23T00:00:00-02:00</published><updated>2015-11-23T21:57:00-02:00</updated><author><name>Ivan Marin</name></author><id>tag:mfactor.sdf.org,2015-11-23:/blog/2015_11_23_desktop-files.html</id><summary type="html">&lt;p&gt;Organizing custom launchers on Debian/Ubuntu &lt;span class="caps"&gt;XDG&lt;/span&gt;&amp;nbsp;compliant&lt;/p&gt;</summary><content type="html">&lt;p&gt;I&amp;#8217;ve been struggling for a while now with custom launchers. First, a bit of organizatoin on how the launchers are supposed to&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;desktop file&lt;/code&gt; is a file that describes a launcher for an application. This file will be indexed by a Window Manager, like &lt;span class="caps"&gt;KDE&lt;/span&gt; or &lt;span class="caps"&gt;XFCE&lt;/span&gt; and can be shown on the menus and etc. The &lt;a href="http://standards.freedesktop.org/desktop-entry-spec/latest/apa.html"&gt;standard form&lt;/a&gt; of a desktop file&amp;nbsp;is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Desktop Entry]&lt;/span&gt;
&lt;span class="na"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1.0&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Application&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Foo Viewer&lt;/span&gt;
&lt;span class="na"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;The best viewer for Foo objects available!&lt;/span&gt;
&lt;span class="na"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;fooview %F&lt;/span&gt;
&lt;span class="na"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;fooview&lt;/span&gt;
&lt;span class="na"&gt;Actions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Gallery;Create;&lt;/span&gt;
&lt;span class="na"&gt;Categories&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Network&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This file should be put on a standard path in the system, like &lt;code&gt;~/.local/share/applications&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;And how to check if the file you wrote is valid? Just run &lt;code&gt;desktop-file-validate&lt;/code&gt; and it will point any errors that you&amp;nbsp;have. &lt;/p&gt;
&lt;h2&gt;&lt;span class="caps"&gt;KDE&lt;/span&gt;&amp;nbsp;blunder&lt;/h2&gt;
&lt;p&gt;After figuring it out how was the correct format for the file, my menus on &lt;span class="caps"&gt;KDE&lt;/span&gt; (and all actions, like changing the default application)was not changing anything. After searching for a long time, I found a solution: the context menu in Dolphin, to change the default application, was poiting to &lt;code&gt;.local/share/applications/mineapps.list&lt;/code&gt; and &lt;span class="caps"&gt;KDE&lt;/span&gt; 5 was reading the file on &lt;code&gt;.config/mimeapps.list&lt;/code&gt;. The solution? Exporting the default directory where &lt;span class="caps"&gt;KDE&lt;/span&gt; can find its icons. On my system, I changed .zshenv and&amp;nbsp;added&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;XDG_DATA_DIRS=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;XDG_DATA_DIRS&lt;/span&gt;&lt;span class="x"&gt;:/home/ispmarin/.local/share/applications&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;done!&lt;/p&gt;</content><category term="linux"></category><category term="desktop"></category></entry></feed>